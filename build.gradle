//
// @author Gordon Lawrenz <lawrenz@dbis.rwth-aachen.de>
//
// use gradle.properties to define parameters
// see gradle.properties.example for help
//
apply plugin: 'base'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'

import org.gradle.api.file.FileCollection
import org.apache.tools.ant.filters.ReplaceTokens

task wrapper(type: Wrapper) {
  gradleVersion = '2.4'
}

//Jenkins seems to not have Java8... still we use Java8 everywhere else!
sourceCompatibility = 1.7
targetCompatibility = 1.7

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-cargo-plugin:1.5.1'
    }
}

repositories {
    mavenCentral()
    flatDir { dirs "lib" }
}

configurations{
	provided
}  

//------------
//Lists for easier dependency management
//------------
List swagger = [
	'com.wordnik:swagger-jersey2-jaxrs_2.11:1.3.12',					//Provides Swagger for Jersey 2.0
]
List javax = [
	'org.eclipse.persistence:javax.persistence:2.1.0'
]
List jersey = [
	'org.glassfish.jersey.containers:jersey-container-servlet:2.13',
	'org.glassfish.jersey.containers:jersey-container-servlet-core:2.13',
	'org.glassfish.jersey.ext:jersey-proxy-client:2.13'
]
List hibernate = [
	'org.hibernate:hibernate-core:4.1.1.Final',
	'org.hibernate:hibernate-entitymanager:4.1.1.Final',
	'org.hibernate:hibernate-validator:4.2.0.Final',
]
List google = [
	'com.google.code.gson:gson:2.2.4'
]
List mysql = [
	'mysql:mysql-connector-java:5.1.34'
]

//------------
//Dependency for our configurations
//------------
dependencies {
	testCompile	group: 'junit', name: 'junit', version: '4.+'
	
	compile	javax, jersey, google, mysql, swagger, hibernate, swagger, jersey
	
	providedCompile	'javax.servlet:javax.servlet-api:3.0.1'	//only for eclipse as tomcat7 already uses servlet-api 3.0
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

processResources {
	from('src/main/resources') {
		include '*.properties'
		filter(ReplaceTokens, tokens: ['swaggerWebApplicationName': 'Tethys-UserStorage'])
		filter(ReplaceTokens, tokens: ['swaggerWebApplicationHost': 'localhost'])
		filter(ReplaceTokens, tokens: ['swaggerWebApplicationPort': '8080'])
	}
}

task stop(type: Exec) {
    commandLine "${System.env.TOMCAT_HOME}/bin/startup.sh"
}

task start(type: Exec) {
	commandLine "${System.env.TOMCAT_HOME}/bin/shutdown.sh"
}

task deploy(type: Copy) {
	dependsOn assemble, war
	from war
	into "${System.env.TOMCAT_HOME}/webapps"
}
